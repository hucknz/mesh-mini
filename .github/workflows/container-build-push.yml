name: Container build and push

# When triggered the latest version of the container is built and pushed to docker hub and ghcr.io

on:
  workflow_dispatch:

jobs:
  build_and_push:
    name: Container build and push
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
        
      - name: Get latest version number
        id: get_version
        run: |
          VER=$(curl -s https://raw.githubusercontent.com/hucknz/mesh-mini/master/.version)
          echo "baseimage_digest=$VER" >> $GITHUB_ENV

      - name: Check out the repo
        id: checkout_repository
        uses: actions/checkout@v4
        
      - name: Set up QEMU
        id: setup_qemu
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: setup_buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        id: authenticate_dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the ghcr.io
        id: authenticate_ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: extract_metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            hucknz/mesh-mini
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ env.VERSION }}
            type=raw,value=latest

      - name: Build and push Docker images
        id: build_images
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.extract_metadata.outputs.tags }}
          labels: ${{ steps.extract_metadata.outputs.labels }}

      - name: Notify outcome
        id: notify
        if: always()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          noprefix: true
          status: ${{ job.status }}
          title: ${{ github.workflow}} ${{ job.status }}